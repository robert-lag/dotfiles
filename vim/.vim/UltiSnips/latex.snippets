snippet today "Date"
`date +%F`
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

# Math
snippet mk "Display math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Inline math" wA
\[
$1
.\] $0
endsnippet

# Subscripts
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

# Superscripts
snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

# Fractions
# // 	→ 	\frac{}{}
# 3/ 	→ 	\frac{3}{}
# 4\pi^2/ 	→ 	\frac{4\pi^2}{}
# (1 + 2 + 3)/ 	→ 	\frac{1 + 2 + 3}{}
# (1+(2+3)/) 	→ 	(1 + \frac{2+3}{})
# (1 + (2+3))/ 	→ 	\frac{1 + (2+3)}{}
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

# Fraction for visual mode (select text -> 'Tab' -> '/' -> 'Tab')
snippet / "Fraction" iA
\\frac{${VISUAL}}{$1}$0
endsnippet
